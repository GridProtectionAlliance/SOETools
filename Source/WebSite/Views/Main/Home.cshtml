@*******************************************************************************************************
    //  Home.cshtml - Gbtc
    //
    //  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
    //
    //  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
    //  the NOTICE file distributed with this work for additional information regarding copyright ownership.
    //  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
    //  file except in compliance with the License. You may obtain a copy of the License at:
    //
    //      http://opensource.org/licenses/MIT
    //
    //  Unless agreed to in writing, the subject software distributed under the License is distributed on an
    //  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
    //  License for the specific language governing permissions and limitations.
    //
    //  Code Modification History:
    //  ----------------------------------------------------------------------------------------------------
    //  01/22/2016 - J. Ritchie Carroll
    //       Generated original version of source code.
    //
    //*****************************************************************************************************@
@using GSF.Web.Model
@using SOETools.Model
@model SOETools.Model.AppModel
@{
    // DataContext is the "database connection" that is available for the page, you can
    // use direct database calls, e.g., dataContect.Connection.RetrieveData(...) or you
    // can use model based table operations, e.g., dataContext.Table<Page>().LoadRecord(id)
    DataContext dataContext = Model.DataContext;

    List<int> counts = ViewBag.counts;
    List<int> faults = ViewBag.faults;
    List<int> faultsLG = ViewBag.faultsLG;
    List<int> faultsLL = ViewBag.faultsLL;
    List<int> faultsLLL = ViewBag.faultsLLL;
    List<int> volts = ViewBag.volts;
    List<int> voltsags = ViewBag.voltsags;
    List<int> voltswells = ViewBag.voltswells;

    List<int> others = ViewBag.others;
    ValueList[] timeWindows = ViewBag.timeWindows;



}
@section StyleSheets {
    @* Include any page specific style sheets here, these will be added to page header *@
}
@section Scripts {
    @* Include any page specific scripts here, these will be added to scripts at bottom of page *@
}

<div class="col-md-10">
    <p>&nbsp;</p>
    <table class="table table-condensed table-hover">

        <tr>
            <td>&nbsp;</td>
            @foreach (ValueList vl in timeWindows)
            {
                <td align="right">&nbsp;&nbsp;&nbsp;&nbsp; @Html.Raw(vl.Text)</td>
            }
            <td align="right">&nbsp;&nbsp;&nbsp;&nbsp;All&nbsp;Time</td>
        </tr>

        <tr>
            <td>Faults(total)</td>
            @{
                int i = 0;

                foreach (int f in faults)
                {

                    <td align="right"><a href="@Url.Content("~/Main/Faults/?DateRange=" + timeWindows[i++].Value + "&Title=SOE Fault Summary&Restriction=FaultTypeNotNull")">@Html.Raw(f)</a></td>
                }

            }
            <td align="right"><a href="@Url.Content("~/Main/Faults/?DateRange=-1&Title=SOE Fault Summary&Restriction=FaultTypeNotNull")">@ViewBag.FaultsAT</a></td>

        </tr>
        <tr>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;L-G&nbsp;/&nbsp;L-L-G&nbsp;/&nbsp;L-L-L-G</td>
            @{
                i = 0;

                foreach (int f in faultsLG)
                {

                    <td align="right"><a href="@Url.Content("~/Main/Faults/?DateRange=" + timeWindows[i++].Value + "&Title=SOE Fault Summary&Restriction=FaultTypeLG")">@Html.Raw(f)</a></td>
                }

            }
            <td align="right"><a href="@Url.Content("~/Main/Faults/?DateRange=-1&Title=SOE Fault Summary&Restriction=FaultTypeLG")">@ViewBag.FaultsLGAT</a></td>

        </tr>
        <tr>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;L-L</td>
            @{

                i = 0;

                foreach (int f in faultsLL)
                {

                <td align="right"><a href="@Url.Content("~/Main/Faults/?DateRange=" + timeWindows[i++].Value + "&Title=Faults&Restriction=FaultTypeLL")">@Html.Raw(f)</a></td>
                }

            }
            <td align="right"><a href="@Url.Content("~/Main/Faults/?DateRange=-1&Title=Faults&Restriction=FaultTypeLL")">@ViewBag.FaultsLLAT</a></td>

        </tr>
        <tr>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;L-L-L</td>
            @{

                i = 0;

                foreach (int f in faultsLLL)
                {

                    <td align="right"><a href="@Url.Content("~/Main/Faults/?DateRange=" + timeWindows[i++].Value + "&Title=Faults&Restriction=FaultTypeLLL")">@Html.Raw(f)</a></td>
                }

            }
            <td align="right"><a href="@Url.Content("~/Main/Faults/?DateRange=-1&Title=Faults&Restriction=FaultTypeLLL")">@ViewBag.FaultsLLLAT</a></td>


        </tr>

        <tr>
            <td>Voltage Source(total)</td>
            @{
                i = 0;

                foreach (int v in volts)
                {

                    <td align="right"><a href="@Url.Content("~/Main/VoltSource/?DateRange=" + timeWindows[i++].Value + "&Title=Voltage Source&Restriction=AllVolts")">@Html.Raw(v)</a></td>
                }

            }
            <td align="right"><a href="@Url.Content("~/Main/VoltSource/?DateRange=-1&Title=Voltage Source&Restriction=AllVolts")">@ViewBag.VoltsAT</a></td>

        </tr>
        <tr>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;SAG</td>
            @{
                i = 0;

                foreach (int s in voltsags)
                {

                    <td align="right"><a href="@Url.Content("~/Main/VoltSource/?DateRange=" + timeWindows[i++].Value + "&Title=Voltage Source&Restriction=VoltSag")">@Html.Raw(s)</a></td>
                }

            }
            <td align="right"><a href="@Url.Content("~/Main/VoltSource/?DateRange=-1&Title=Voltage Source&Restriction=VoltSag")">@ViewBag.VoltSAGAT</a></td>

        </tr>
        <tr>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;SWELL</td>
            @{
                i = 0;

                foreach (int s in voltswells)
                {

                    <td align="right"><a href="@Url.Content("~/Main/VoltSource/?DateRange=" + timeWindows[i++].Value + "&Title=Voltage Source&Restriction=VoltSwell")">@Html.Raw(s)</a></td>
                }

            }
            <td align="right"><a href="@Url.Content("~/Main/VoltSource/?DateRange=-1&Title=Voltage Source&Restriction=VoltSwell")">@ViewBag.VoltSWELLAT</a></td>

        </tr>



        <tr>
            <td>Other</td>
            @{
                i = 0;

                foreach (int o in others)
                {

                    <td align="right"><a href="@Url.Content("~/Main/IncidentEventCycleDataView/?DateRange=" + timeWindows[i++].Value + "&Title=Voltage Source&Restriction=Others")">@Html.Raw(o)</a></td>
                }

            }
            <td align="right"><a href="@Url.Content("~/Main/IncidentEventCycleDataView/?DateRange=-1&Title=Voltage Source&Restriction=Others")">@ViewBag.OtherAT</a></td>

        </tr>
        <tr>
            <td>SOE Total</td>
            @{
                i = 0;

                foreach (int c in counts)
                {

                    <td align="right"><a href="@Url.Content("~/Main/IncidentEventCycleDataView/?DateRange=" + timeWindows[i++].Value)">@Html.Raw(c)</a></td>
                }

            }
            <td align="right"><a href="@Url.Content("~/Main/IncidentEventCycleDataView/?DateRange=-1")">@ViewBag.SOESAD</a></td>
        </tr>
    </table>

</div>

