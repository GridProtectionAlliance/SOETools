@*******************************************************************************************************
    //  CycleDataSOEPointView.cshtml - Gbtc
    //
    //  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
    //
    //  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
    //  the NOTICE file distributed with this work for additional information regarding copyright ownership.
    //  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may
    //  not use this file except in compliance with the License. You may obtain a copy of the License at:
    //
    //      http://opensource.org/licenses/MIT
    //
    //  Unless agreed to in writing, the subject software distributed under the License is distributed on an
    //  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
    //  License for the specific language governing permissions and limitations.
    //
    //  Code Modification History:
    //  ----------------------------------------------------------------------------------------------------
    //  04/21/2016 - Stephen Wills
    //       Generated original version of source code.
    //
    //*****************************************************************************************************@
@using System.Collections.Specialized
@using GSF
@using GSF.Data.Model
@using GSF.Web
@using GSF.Web.Model
@using SOETools.Model
@model SOETools.Model.AppModel
@{
    DataContext dataContext = Model.DbDataContext;
    NameValueCollection parameters = Request.QueryString;
    int dateRange = int.Parse(parameters["DateRange"] ?? "-1");
    string title = parameters["Title"] ?? "" ;
    string restriction = parameters["Restriction"] ?? "";


    ViewBag.CustomTitle = "Incidents";
    ViewBag.AddNewEditTitle = "";
    ViewBag.HeaderColumns = new[]
{   //    { "Field", "Label", "Classes" }
        new[] { "StartTime", "Date/Time", "text-center" },
        new[] { "Device", "Meter Name", "text-center" },
        new[] { null, "Fault Type", "text-center valign-middle"},
        new[] { null, "Phase A", "text-center valign-middle" },
        new[] { null, "Phase B", "text-center valign-middle" },
        new[] { null, "Phase c", "text-center valign-middle" },
        new[] { null, "Ground", "text-center valign-middle" },
        new[] { null, "Duration", "text-center valign-middle" },
        new[] { null, "SOE Data", "text-center valign-middle" },
    };

    ViewBag.BodyRows = BodyRows().ToString();
    ViewBag.AddNewEditDialog = AddNewEditDialog().ToString();
    ViewBag.HideAddNewButton = true;
    ViewBag.CanEdit = false;
    ViewBag.HideUnauthorizedControls = true;
}

@helper MeterFilter()
{
    <div class='row'>
        <div class='col-md-12'>
            <div class='form-group'>
                <label for='meterfilter'>Meter Name Filter:</label>
                <div class='right-inner-addon'>
                    <i class='glyphicon glyphicon-search'></i>
                    <input class='form-control' type='search' id='meterfilter' placeholder='Search' />
                </div>
            </div>
        </div>
    </div>

}


@helper BodyRows()
{
    <td width="11%" class="text-center valign-middle" data-bind="text: StartTime.formatDate(DateTimeFormat)"></td>
    <td width="11%" class="text-center valign-middle" data-bind="text: Device"></td>
    <td width="11%" class="text-center valign-middle" data-bind="text: FaultType"></td>
    <td width="11%" class="text-center valign-middle" data-bind="text: PhaseA.toFixed(0)"></td>
    <td width="11%" class="text-center valign-middle" data-bind="text: PhaseB.toFixed(0)"></td>
    <td width="11%" class="text-center valign-middle" data-bind="text: PhaseC.toFixed(0)"></td>
    <td width="11%" class="text-center valign-middle" data-bind="text: Ground.toFixed(0)"></td>
    <td width="11%" class="text-center valign-middle" data-bind="text: (Duration/1000*60).toFixed(1)"></td>
    <td width="11%" class="text-center valign-middle" nowrap><button type="button" class="btn btn-danger" data-bind="click: openSOEModal.bind($data)">A</button><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><button type="button" class="btn btn-danger" data-bind="">W</button></td>
}

@helper AddNewEditDialog()
{
    <div class="col-md-12">
        <input id="uploadFiles" name="uploadFiles[]" type="file" multiple class="file-loading">
    </div>
}
@Html.Partial("PagedViewModel")
<div id="incidentTable"></div>

<div id="openSOEDialog" class="modal modal-wide fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <iframe style="border: none" id="openSOEFrame"></iframe>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        @Html.Raw(Model.RenderViewModelConfiguration<IncidentEventCycleDataView>(ViewBag, "StartTime", dateRange, "'" + restriction +"'"))

        $(function () {
            $("#openSOEDialog").modal({ show: false, backdrop: "static", keyboard: false });
            
            $("#pageHeader").append("@Html.Raw(MeterFilter().ToString().RemoveDuplicateWhiteSpace().Replace("\r\n", ""))");
            $('#meterfilter').on('keyup', function (e) {
                if ($('#meterfilter').val().length == 0) {
                    viewModel.filterText = '%';
                    viewModel.queryPageRecords();
                } else {
                    viewModel.filterText = $('#meterfilter').val();
                    viewModel.queryPageRecords();

                }

            });
        });

        function openSOEModal(record) {
            $("#openSOEFrame").attr({
                "src": "@Url.Content("~/Main/CycleDataSOEPointView/?IncidentID=")" + record.ID.toString(),
                "height": ($(window).height() - 250) + "px",
                "width": "100%"
        });


        $("#openSOEDialog").modal("show");
        }
    </script>
}